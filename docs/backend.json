
{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the NexusLearn Lite application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user.",
          "format": "uuid"
        },
        "name": {
          "type": "string",
          "description": "The user's full name."
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "board": {
          "type": "string",
          "description": "The user's selected board (e.g., CBSE, ICSE)."
        },
        "grade": {
          "type": "string",
          "description": "The user's current grade level."
        },
        "lastLoginDate": {
          "type": "string",
          "description": "The date of the user's last login.",
          "format": "date"
        }
      },
      "required": [
        "id",
        "name",
        "email",
        "board",
        "grade"
      ]
    },
    "StudyGoal": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "StudyGoal",
      "type": "object",
      "description": "Represents a daily study goal for a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the study goal."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User. (Relationship: User 1:N StudyGoal)"
        },
        "goalDescription": {
          "type": "string",
          "description": "Description of the study goal."
        },
        "dueDate": {
          "type": "string",
          "description": "The date the study goal is due.",
          "format": "date-time"
        },
        "completed": {
          "type": "boolean",
          "description": "Indicates whether the study goal has been completed."
        }
      },
      "required": [
        "id",
        "userId",
        "goalDescription",
        "dueDate",
        "completed"
      ]
    },
    "Quiz": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Quiz",
      "type": "object",
      "description": "Represents a quiz generated by the application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the quiz."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User. (Relationship: User 1:N Quiz)"
        },
        "topic": {
          "type": "string",
          "description": "The topic of the quiz."
        },
        "questionType": {
          "type": "string",
          "description": "The type of questions in the quiz (e.g., MCQ, 1-mark)."
        },
        "creationDate": {
          "type": "string",
          "description": "The date the quiz was created.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "topic",
        "questionType",
        "creationDate"
      ]
    },
    "Question": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Question",
      "type": "object",
      "description": "Represents a question in a quiz.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the question."
        },
        "quizId": {
          "type": "string",
          "description": "Reference to the Quiz. (Relationship: Quiz 1:N Question)"
        },
        "text": {
          "type": "string",
          "description": "The text of the question."
        },
        "correctAnswer": {
          "type": "string",
          "description": "The correct answer to the question."
        },
        "options": {
          "type": "array",
          "description": "List of possible answer options for the question.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "quizId",
        "text",
        "correctAnswer",
        "options"
      ]
    },
    "JournalEntry": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "JournalEntry",
      "type": "object",
      "description": "Represents a journal entry created by a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the journal entry."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User. (Relationship: User 1:N JournalEntry)"
        },
        "title": {
          "type": "string",
          "description": "The title of the journal entry."
        },
        "content": {
          "type": "string",
          "description": "The content of the journal entry."
        },
        "creationDate": {
          "type": "string",
          "description": "The date the journal entry was created.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "title",
        "content",
        "creationDate"
      ]
    },
    "PomodoroSession": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PomodoroSession",
      "type": "object",
      "description": "Represents a Pomodoro study session.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Pomodoro session."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User. (Relationship: User 1:N PomodoroSession)"
        },
        "startTime": {
          "type": "string",
          "description": "The start time of the session.",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "description": "The end time of the session.",
          "format": "date-time"
        },
        "studyInterval": {
          "type": "number",
          "description": "The length of the study interval in minutes."
        },
        "breakInterval": {
          "type": "number",
          "description": "The length of the break interval in minutes."
        }
      },
      "required": [
        "id",
        "userId",
        "startTime",
        "endTime",
        "studyInterval",
        "breakInterval"
      ]
    },
    "MistakeAnalysis": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "MistakeAnalysis",
      "type": "object",
      "description": "Represents an analysis of mistakes made on a quiz.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the mistake analysis."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User. (Relationship: User 1:N MistakeAnalysis)"
        },
        "quizId": {
          "type": "string",
          "description": "Reference to the Quiz. (Relationship: Quiz 1:N MistakeAnalysis)"
        },
        "analysis": {
          "type": "string",
          "description": "The AI-generated analysis of the user's mistakes."
        },
        "suggestions": {
          "type": "string",
          "description": "The AI-generated suggestions for improvement."
        }
      },
      "required": [
        "id",
        "userId",
        "quizId",
        "analysis",
        "suggestions"
      ]
    },
    "QuizAttempt": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "QuizAttempt",
      "description": "Represents a user's attempt at a quiz, including their answers and score.",
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "userId": { "type": "string" },
        "topic": { "type": "string" },
        "score": { "type": "number" },
        "totalQuestions": { "type": "number" },
        "createdAt": { "type": "string", "format": "date-time" },
        "questions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "question": { "type": "string" },
              "userAnswer": { "type": "string" },
              "correctAnswer": { "type": "string" }
            },
            "required": ["question", "userAnswer", "correctAnswer"]
          }
        }
      },
      "required": ["userId", "topic", "score", "totalQuestions", "createdAt", "questions"]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information.  Path-based ownership ensures only the authenticated user can access their data.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/studyGoals/{studyGoalId}",
        "definition": {
          "entityName": "StudyGoal",
          "schema": {
            "$ref": "#/backend/entities/StudyGoal"
          },
          "description": "Stores study goals created by a user. Path-based ownership ensures only the authenticated user can access their study goals.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "studyGoalId",
              "description": "The unique identifier for the study goal."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/quizzes/{quizId}",
        "definition": {
          "entityName": "Quiz",
          "schema": {
            "$ref": "#/backend/entities/Quiz"
          },
          "description": "Stores quizzes generated by a user. Path-based ownership ensures only the authenticated user can access their quizzes.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "quizId",
              "description": "The unique identifier for the quiz."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/quizzes/{quizId}/questions/{questionId}",
        "definition": {
          "entityName": "Question",
          "schema": {
            "$ref": "#/backend/entities/Question"
          },
          "description": "Stores questions associated with a specific quiz. Path-based ownership, following the quiz path, ensures data belongs to the user's quiz.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "quizId",
              "description": "The unique identifier for the quiz."
            },
            {
              "name": "questionId",
              "description": "The unique identifier for the question."
            }
          ]
        }
      },
       {
        "path": "/users/{userId}/quizAttempts/{quizAttemptId}",
        "definition": {
          "entityName": "QuizAttempt",
          "schema": { "$ref": "#/backend/entities/QuizAttempt" },
          "description": "Stores a user's quiz attempts. Path-based ownership ensures only the authenticated user can access their quiz history."
        }
      },
      {
        "path": "/users/{userId}/journalEntries/{journalEntryId}",
        "definition": {
          "entityName": "JournalEntry",
          "schema": {
            "$ref": "#/backend/entities/JournalEntry"
          },
          "description": "Stores journal entries created by a user. Path-based ownership ensures only the authenticated user can access their journal entries.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "journalEntryId",
              "description": "The unique identifier for the journal entry."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/pomodoroSessions/{pomodoroSessionId}",
        "definition": {
          "entityName": "PomodoroSession",
          "schema": {
            "$ref": "#/backend/entities/PomodoroSession"
          },
          "description": "Stores Pomodoro sessions tracked by a user. Path-based ownership ensures only the authenticated user can access their session data.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "pomodoroSessionId",
              "description": "The unique identifier for the Pomodoro session."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/mistakeAnalyses/{mistakeAnalysisId}",
        "definition": {
          "entityName": "MistakeAnalysis",
          "schema": {
            "$ref": "#/backend/entities/MistakeAnalysis"
          },
          "description": "Stores mistake analyses generated for a user's quizzes. Path-based ownership ensures only the authenticated user can access their analyses.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "mistakeAnalysisId",
              "description": "The unique identifier for the mistake analysis."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to ensure authorization independence, clarity, and scalability for the NexusLearn Lite application. User-owned data is stored under `/users/{userId}` for simplified security rules.  Denormalization is applied where necessary to avoid `get()` calls in security rules, ensuring atomic operations and easy debugging. The structure supports the required QAPs through segregation (separating user-specific data) and path-based ownership, allowing secure list operations. For example, all user data is stored within the `/users/{userId}` path to limit access to the authenticated user only. All `StudyGoal`, `Quiz`, `JournalEntry`, `PomodoroSession`, `MistakeAnalysis`, and `QuizAttempt` are nested under `/users/{userId}` to leverage path-based ownership and avoid complex rules. This approach ensures data integrity and simplifies security management by aligning closely with Firebase's recommended practices."
  }
}

    